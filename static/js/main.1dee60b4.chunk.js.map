{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","maxId","title","completed","classNames","TodoList","todos","map","id","username","getUser","userId","usersFromServer","find","App","useState","userSelect","setUserSelect","titleInput","setTitleInput","newTodos","setNewTodos","emtyTitle","setEmtyTitle","emtyId","setEmtyUser","allId","Math","max","handleCgange","e","input","target","value","result","match","join","checkInput","action","method","onSubmit","event","preventDefault","type","placeholder","onChange","disabled","onClick","trim","newTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1dee60b4.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n  maxId: number;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo, maxId }) => {\n  const {\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={maxId}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed === true },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n  maxId: number;\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, maxId }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} maxId={maxId} key={todo.id} />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\n\nimport { ChangeEvent, useState } from 'react';\nimport { TodoList } from './components/TodoList';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [userSelect, setUserSelect] = useState('');\n  const [titleInput, setTitleInput] = useState('');\n  const [newTodos, setNewTodos] = useState(todos);\n  const [emtyTitle, setEmtyTitle] = useState(false);\n  const [emtyId, setEmtyUser] = useState(false);\n\n  const allId = newTodos.map(todo => todo.id);\n  const maxId = Math.max(...allId);\n\n  const handleSumbit = () => {\n    if (!userSelect) {\n      setEmtyUser(true);\n    }\n\n    if (!titleInput.trim()) {\n      setEmtyTitle(true);\n    }\n\n    if (!userSelect || !titleInput.trim()) {\n      return;\n    }\n\n    const newTodo: Todo = {\n      id: maxId + 1,\n      title: titleInput,\n      completed: false,\n      userId: +userSelect,\n      user: getUser(+userSelect),\n    };\n\n    setNewTodos([\n      ...newTodos,\n      newTodo,\n    ]);\n\n    setUserSelect('');\n    setTitleInput('');\n  };\n\n  const checkInput = (value: string) => {\n    const result = value.match(/[a-zA-Zа-яА-Я\\d\\s]+/g);\n\n    return result ? result.join('') : '';\n  };\n\n  const handleCgange = (e: ChangeEvent) => {\n    const input = e.target as HTMLInputElement;\n\n    if (input.id === 'titleInput') {\n      setTitleInput(checkInput(input.value));\n      setEmtyTitle(false);\n    }\n\n    if (input.id === 'userSelect') {\n      setUserSelect(input.value);\n      setEmtyUser(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={event => event.preventDefault()}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            value={titleInput}\n            data-cy=\"titleInput\"\n            id=\"titleInput\"\n            placeholder=\"Enter a title\"\n            onChange={event => handleCgange(event)}\n          />\n\n          {emtyTitle && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userSelect}\n            id=\"userSelect\"\n            onChange={event => handleCgange(event)}\n          >\n            <option value=\"\" disabled>Choose a user</option>\n\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          {emtyId && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={handleSumbit}\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={newTodos} maxId={maxId} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}